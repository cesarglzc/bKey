//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("bKeyModel", "FK_acceso_cerradura", "cerradura", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(bKey.DALC.cerradura), "acceso", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(bKey.DALC.acceso), true)]
[assembly: EdmRelationshipAttribute("bKeyModel", "FK_acceso_usuario", "usuario", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(bKey.DALC.usuario), "acceso", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(bKey.DALC.acceso), true)]
[assembly: EdmRelationshipAttribute("bKeyModel", "FK_evento_cerradura", "cerradura", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(bKey.DALC.cerradura), "evento", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(bKey.DALC.evento), true)]
[assembly: EdmRelationshipAttribute("bKeyModel", "FK_usuario_cerradura_cerradura", "cerradura", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(bKey.DALC.cerradura), "usuario_cerradura", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(bKey.DALC.usuario_cerradura), true)]
[assembly: EdmRelationshipAttribute("bKeyModel", "FK_usuario_cerradura_tipousuario", "tipousuario", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(bKey.DALC.tipousuario), "usuario_cerradura", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(bKey.DALC.usuario_cerradura), true)]
[assembly: EdmRelationshipAttribute("bKeyModel", "FK_usuario_cerradura_usuario", "usuario", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(bKey.DALC.usuario), "usuario_cerradura", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(bKey.DALC.usuario_cerradura), true)]

#endregion

namespace bKey.DALC
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class bKeyEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new bKeyEntities object using the connection string found in the 'bKeyEntities' section of the application configuration file.
        /// </summary>
        public bKeyEntities() : base("name=bKeyEntities", "bKeyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new bKeyEntities object.
        /// </summary>
        public bKeyEntities(string connectionString) : base(connectionString, "bKeyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new bKeyEntities object.
        /// </summary>
        public bKeyEntities(EntityConnection connection) : base(connection, "bKeyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<acceso> acceso
        {
            get
            {
                if ((_acceso == null))
                {
                    _acceso = base.CreateObjectSet<acceso>("acceso");
                }
                return _acceso;
            }
        }
        private ObjectSet<acceso> _acceso;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<cerradura> cerradura
        {
            get
            {
                if ((_cerradura == null))
                {
                    _cerradura = base.CreateObjectSet<cerradura>("cerradura");
                }
                return _cerradura;
            }
        }
        private ObjectSet<cerradura> _cerradura;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<evento> evento
        {
            get
            {
                if ((_evento == null))
                {
                    _evento = base.CreateObjectSet<evento>("evento");
                }
                return _evento;
            }
        }
        private ObjectSet<evento> _evento;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tipousuario> tipousuario
        {
            get
            {
                if ((_tipousuario == null))
                {
                    _tipousuario = base.CreateObjectSet<tipousuario>("tipousuario");
                }
                return _tipousuario;
            }
        }
        private ObjectSet<tipousuario> _tipousuario;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<usuario> usuario
        {
            get
            {
                if ((_usuario == null))
                {
                    _usuario = base.CreateObjectSet<usuario>("usuario");
                }
                return _usuario;
            }
        }
        private ObjectSet<usuario> _usuario;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<usuario_cerradura> usuario_cerradura
        {
            get
            {
                if ((_usuario_cerradura == null))
                {
                    _usuario_cerradura = base.CreateObjectSet<usuario_cerradura>("usuario_cerradura");
                }
                return _usuario_cerradura;
            }
        }
        private ObjectSet<usuario_cerradura> _usuario_cerradura;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the acceso EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToacceso(acceso acceso)
        {
            base.AddObject("acceso", acceso);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the cerradura EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocerradura(cerradura cerradura)
        {
            base.AddObject("cerradura", cerradura);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the evento EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToevento(evento evento)
        {
            base.AddObject("evento", evento);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tipousuario EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotipousuario(tipousuario tipousuario)
        {
            base.AddObject("tipousuario", tipousuario);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the usuario EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTousuario(usuario usuario)
        {
            base.AddObject("usuario", usuario);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the usuario_cerradura EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTousuario_cerradura(usuario_cerradura usuario_cerradura)
        {
            base.AddObject("usuario_cerradura", usuario_cerradura);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="bKeyModel", Name="acceso")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class acceso : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new acceso object.
        /// </summary>
        /// <param name="idacceso">Initial value of the idacceso property.</param>
        /// <param name="fecha">Initial value of the fecha property.</param>
        /// <param name="idcerradura">Initial value of the idcerradura property.</param>
        /// <param name="username">Initial value of the username property.</param>
        public static acceso Createacceso(global::System.Int32 idacceso, global::System.DateTime fecha, global::System.Int32 idcerradura, global::System.String username)
        {
            acceso acceso = new acceso();
            acceso.idacceso = idacceso;
            acceso.fecha = fecha;
            acceso.idcerradura = idcerradura;
            acceso.username = username;
            return acceso;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idacceso
        {
            get
            {
                return _idacceso;
            }
            set
            {
                if (_idacceso != value)
                {
                    OnidaccesoChanging(value);
                    ReportPropertyChanging("idacceso");
                    _idacceso = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idacceso");
                    OnidaccesoChanged();
                }
            }
        }
        private global::System.Int32 _idacceso;
        partial void OnidaccesoChanging(global::System.Int32 value);
        partial void OnidaccesoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime fecha
        {
            get
            {
                return _fecha;
            }
            set
            {
                OnfechaChanging(value);
                ReportPropertyChanging("fecha");
                _fecha = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fecha");
                OnfechaChanged();
            }
        }
        private global::System.DateTime _fecha;
        partial void OnfechaChanging(global::System.DateTime value);
        partial void OnfechaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idcerradura
        {
            get
            {
                return _idcerradura;
            }
            set
            {
                OnidcerraduraChanging(value);
                ReportPropertyChanging("idcerradura");
                _idcerradura = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idcerradura");
                OnidcerraduraChanged();
            }
        }
        private global::System.Int32 _idcerradura;
        partial void OnidcerraduraChanging(global::System.Int32 value);
        partial void OnidcerraduraChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] foto
        {
            get
            {
                return StructuralObject.GetValidValue(_foto);
            }
            set
            {
                OnfotoChanging(value);
                ReportPropertyChanging("foto");
                _foto = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("foto");
                OnfotoChanged();
            }
        }
        private global::System.Byte[] _foto;
        partial void OnfotoChanging(global::System.Byte[] value);
        partial void OnfotoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("bKeyModel", "FK_acceso_cerradura", "cerradura")]
        public cerradura cerradura
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<cerradura>("bKeyModel.FK_acceso_cerradura", "cerradura").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<cerradura>("bKeyModel.FK_acceso_cerradura", "cerradura").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<cerradura> cerraduraReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<cerradura>("bKeyModel.FK_acceso_cerradura", "cerradura");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<cerradura>("bKeyModel.FK_acceso_cerradura", "cerradura", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("bKeyModel", "FK_acceso_usuario", "usuario")]
        public usuario usuario
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<usuario>("bKeyModel.FK_acceso_usuario", "usuario").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<usuario>("bKeyModel.FK_acceso_usuario", "usuario").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<usuario> usuarioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<usuario>("bKeyModel.FK_acceso_usuario", "usuario");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<usuario>("bKeyModel.FK_acceso_usuario", "usuario", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="bKeyModel", Name="cerradura")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class cerradura : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new cerradura object.
        /// </summary>
        /// <param name="idcerradura">Initial value of the idcerradura property.</param>
        /// <param name="llave">Initial value of the llave property.</param>
        /// <param name="nombre">Initial value of the nombre property.</param>
        public static cerradura Createcerradura(global::System.Int32 idcerradura, global::System.String llave, global::System.String nombre)
        {
            cerradura cerradura = new cerradura();
            cerradura.idcerradura = idcerradura;
            cerradura.llave = llave;
            cerradura.nombre = nombre;
            return cerradura;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idcerradura
        {
            get
            {
                return _idcerradura;
            }
            set
            {
                if (_idcerradura != value)
                {
                    OnidcerraduraChanging(value);
                    ReportPropertyChanging("idcerradura");
                    _idcerradura = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idcerradura");
                    OnidcerraduraChanged();
                }
            }
        }
        private global::System.Int32 _idcerradura;
        partial void OnidcerraduraChanging(global::System.Int32 value);
        partial void OnidcerraduraChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String llave
        {
            get
            {
                return _llave;
            }
            set
            {
                OnllaveChanging(value);
                ReportPropertyChanging("llave");
                _llave = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("llave");
                OnllaveChanged();
            }
        }
        private global::System.String _llave;
        partial void OnllaveChanging(global::System.String value);
        partial void OnllaveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nombre
        {
            get
            {
                return _nombre;
            }
            set
            {
                OnnombreChanging(value);
                ReportPropertyChanging("nombre");
                _nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nombre");
                OnnombreChanged();
            }
        }
        private global::System.String _nombre;
        partial void OnnombreChanging(global::System.String value);
        partial void OnnombreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> activo
        {
            get
            {
                return _activo;
            }
            set
            {
                OnactivoChanging(value);
                ReportPropertyChanging("activo");
                _activo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("activo");
                OnactivoChanged();
            }
        }
        private Nullable<global::System.Boolean> _activo;
        partial void OnactivoChanging(Nullable<global::System.Boolean> value);
        partial void OnactivoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("bKeyModel", "FK_acceso_cerradura", "acceso")]
        public EntityCollection<acceso> acceso
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<acceso>("bKeyModel.FK_acceso_cerradura", "acceso");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<acceso>("bKeyModel.FK_acceso_cerradura", "acceso", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("bKeyModel", "FK_evento_cerradura", "evento")]
        public EntityCollection<evento> evento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<evento>("bKeyModel.FK_evento_cerradura", "evento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<evento>("bKeyModel.FK_evento_cerradura", "evento", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("bKeyModel", "FK_usuario_cerradura_cerradura", "usuario_cerradura")]
        public EntityCollection<usuario_cerradura> usuario_cerradura
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<usuario_cerradura>("bKeyModel.FK_usuario_cerradura_cerradura", "usuario_cerradura");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<usuario_cerradura>("bKeyModel.FK_usuario_cerradura_cerradura", "usuario_cerradura", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="bKeyModel", Name="evento")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class evento : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new evento object.
        /// </summary>
        /// <param name="idevento">Initial value of the idevento property.</param>
        /// <param name="fecha">Initial value of the fecha property.</param>
        /// <param name="idcerradura">Initial value of the idcerradura property.</param>
        public static evento Createevento(global::System.Int32 idevento, global::System.DateTime fecha, global::System.Int32 idcerradura)
        {
            evento evento = new evento();
            evento.idevento = idevento;
            evento.fecha = fecha;
            evento.idcerradura = idcerradura;
            return evento;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idevento
        {
            get
            {
                return _idevento;
            }
            set
            {
                if (_idevento != value)
                {
                    OnideventoChanging(value);
                    ReportPropertyChanging("idevento");
                    _idevento = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idevento");
                    OnideventoChanged();
                }
            }
        }
        private global::System.Int32 _idevento;
        partial void OnideventoChanging(global::System.Int32 value);
        partial void OnideventoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime fecha
        {
            get
            {
                return _fecha;
            }
            set
            {
                OnfechaChanging(value);
                ReportPropertyChanging("fecha");
                _fecha = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fecha");
                OnfechaChanged();
            }
        }
        private global::System.DateTime _fecha;
        partial void OnfechaChanging(global::System.DateTime value);
        partial void OnfechaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idcerradura
        {
            get
            {
                return _idcerradura;
            }
            set
            {
                OnidcerraduraChanging(value);
                ReportPropertyChanging("idcerradura");
                _idcerradura = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idcerradura");
                OnidcerraduraChanged();
            }
        }
        private global::System.Int32 _idcerradura;
        partial void OnidcerraduraChanging(global::System.Int32 value);
        partial void OnidcerraduraChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] foto
        {
            get
            {
                return StructuralObject.GetValidValue(_foto);
            }
            set
            {
                OnfotoChanging(value);
                ReportPropertyChanging("foto");
                _foto = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("foto");
                OnfotoChanged();
            }
        }
        private global::System.Byte[] _foto;
        partial void OnfotoChanging(global::System.Byte[] value);
        partial void OnfotoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("bKeyModel", "FK_evento_cerradura", "cerradura")]
        public cerradura cerradura
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<cerradura>("bKeyModel.FK_evento_cerradura", "cerradura").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<cerradura>("bKeyModel.FK_evento_cerradura", "cerradura").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<cerradura> cerraduraReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<cerradura>("bKeyModel.FK_evento_cerradura", "cerradura");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<cerradura>("bKeyModel.FK_evento_cerradura", "cerradura", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="bKeyModel", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagrams object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="bKeyModel", Name="tipousuario")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tipousuario : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tipousuario object.
        /// </summary>
        /// <param name="idTipoUsuario">Initial value of the idTipoUsuario property.</param>
        /// <param name="descripcion">Initial value of the descripcion property.</param>
        public static tipousuario Createtipousuario(global::System.Int32 idTipoUsuario, global::System.String descripcion)
        {
            tipousuario tipousuario = new tipousuario();
            tipousuario.idTipoUsuario = idTipoUsuario;
            tipousuario.descripcion = descripcion;
            return tipousuario;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idTipoUsuario
        {
            get
            {
                return _idTipoUsuario;
            }
            set
            {
                if (_idTipoUsuario != value)
                {
                    OnidTipoUsuarioChanging(value);
                    ReportPropertyChanging("idTipoUsuario");
                    _idTipoUsuario = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idTipoUsuario");
                    OnidTipoUsuarioChanged();
                }
            }
        }
        private global::System.Int32 _idTipoUsuario;
        partial void OnidTipoUsuarioChanging(global::System.Int32 value);
        partial void OnidTipoUsuarioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String descripcion
        {
            get
            {
                return _descripcion;
            }
            set
            {
                OndescripcionChanging(value);
                ReportPropertyChanging("descripcion");
                _descripcion = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("descripcion");
                OndescripcionChanged();
            }
        }
        private global::System.String _descripcion;
        partial void OndescripcionChanging(global::System.String value);
        partial void OndescripcionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("bKeyModel", "FK_usuario_cerradura_tipousuario", "usuario_cerradura")]
        public EntityCollection<usuario_cerradura> usuario_cerradura
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<usuario_cerradura>("bKeyModel.FK_usuario_cerradura_tipousuario", "usuario_cerradura");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<usuario_cerradura>("bKeyModel.FK_usuario_cerradura_tipousuario", "usuario_cerradura", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="bKeyModel", Name="usuario")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class usuario : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usuario object.
        /// </summary>
        /// <param name="username">Initial value of the username property.</param>
        /// <param name="password">Initial value of the password property.</param>
        /// <param name="nombre">Initial value of the nombre property.</param>
        public static usuario Createusuario(global::System.String username, global::System.String password, global::System.String nombre)
        {
            usuario usuario = new usuario();
            usuario.username = username;
            usuario.password = password;
            usuario.nombre = nombre;
            return usuario;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                if (_username != value)
                {
                    OnusernameChanging(value);
                    ReportPropertyChanging("username");
                    _username = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("username");
                    OnusernameChanged();
                }
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nombre
        {
            get
            {
                return _nombre;
            }
            set
            {
                OnnombreChanging(value);
                ReportPropertyChanging("nombre");
                _nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("nombre");
                OnnombreChanged();
            }
        }
        private global::System.String _nombre;
        partial void OnnombreChanging(global::System.String value);
        partial void OnnombreChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("bKeyModel", "FK_acceso_usuario", "acceso")]
        public EntityCollection<acceso> acceso
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<acceso>("bKeyModel.FK_acceso_usuario", "acceso");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<acceso>("bKeyModel.FK_acceso_usuario", "acceso", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("bKeyModel", "FK_usuario_cerradura_usuario", "usuario_cerradura")]
        public EntityCollection<usuario_cerradura> usuario_cerradura
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<usuario_cerradura>("bKeyModel.FK_usuario_cerradura_usuario", "usuario_cerradura");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<usuario_cerradura>("bKeyModel.FK_usuario_cerradura_usuario", "usuario_cerradura", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="bKeyModel", Name="usuario_cerradura")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class usuario_cerradura : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new usuario_cerradura object.
        /// </summary>
        /// <param name="username">Initial value of the username property.</param>
        /// <param name="idcerradura">Initial value of the idcerradura property.</param>
        /// <param name="idTipoUsuario">Initial value of the idTipoUsuario property.</param>
        /// <param name="fecha">Initial value of the fecha property.</param>
        public static usuario_cerradura Createusuario_cerradura(global::System.String username, global::System.Int32 idcerradura, global::System.Int32 idTipoUsuario, global::System.DateTime fecha)
        {
            usuario_cerradura usuario_cerradura = new usuario_cerradura();
            usuario_cerradura.username = username;
            usuario_cerradura.idcerradura = idcerradura;
            usuario_cerradura.idTipoUsuario = idTipoUsuario;
            usuario_cerradura.fecha = fecha;
            return usuario_cerradura;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                if (_username != value)
                {
                    OnusernameChanging(value);
                    ReportPropertyChanging("username");
                    _username = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("username");
                    OnusernameChanged();
                }
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idcerradura
        {
            get
            {
                return _idcerradura;
            }
            set
            {
                if (_idcerradura != value)
                {
                    OnidcerraduraChanging(value);
                    ReportPropertyChanging("idcerradura");
                    _idcerradura = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idcerradura");
                    OnidcerraduraChanged();
                }
            }
        }
        private global::System.Int32 _idcerradura;
        partial void OnidcerraduraChanging(global::System.Int32 value);
        partial void OnidcerraduraChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idTipoUsuario
        {
            get
            {
                return _idTipoUsuario;
            }
            set
            {
                OnidTipoUsuarioChanging(value);
                ReportPropertyChanging("idTipoUsuario");
                _idTipoUsuario = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idTipoUsuario");
                OnidTipoUsuarioChanged();
            }
        }
        private global::System.Int32 _idTipoUsuario;
        partial void OnidTipoUsuarioChanging(global::System.Int32 value);
        partial void OnidTipoUsuarioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime fecha
        {
            get
            {
                return _fecha;
            }
            set
            {
                OnfechaChanging(value);
                ReportPropertyChanging("fecha");
                _fecha = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("fecha");
                OnfechaChanged();
            }
        }
        private global::System.DateTime _fecha;
        partial void OnfechaChanging(global::System.DateTime value);
        partial void OnfechaChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("bKeyModel", "FK_usuario_cerradura_cerradura", "cerradura")]
        public cerradura cerradura
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<cerradura>("bKeyModel.FK_usuario_cerradura_cerradura", "cerradura").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<cerradura>("bKeyModel.FK_usuario_cerradura_cerradura", "cerradura").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<cerradura> cerraduraReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<cerradura>("bKeyModel.FK_usuario_cerradura_cerradura", "cerradura");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<cerradura>("bKeyModel.FK_usuario_cerradura_cerradura", "cerradura", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("bKeyModel", "FK_usuario_cerradura_tipousuario", "tipousuario")]
        public tipousuario tipousuario
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tipousuario>("bKeyModel.FK_usuario_cerradura_tipousuario", "tipousuario").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tipousuario>("bKeyModel.FK_usuario_cerradura_tipousuario", "tipousuario").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tipousuario> tipousuarioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tipousuario>("bKeyModel.FK_usuario_cerradura_tipousuario", "tipousuario");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tipousuario>("bKeyModel.FK_usuario_cerradura_tipousuario", "tipousuario", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("bKeyModel", "FK_usuario_cerradura_usuario", "usuario")]
        public usuario usuario
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<usuario>("bKeyModel.FK_usuario_cerradura_usuario", "usuario").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<usuario>("bKeyModel.FK_usuario_cerradura_usuario", "usuario").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<usuario> usuarioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<usuario>("bKeyModel.FK_usuario_cerradura_usuario", "usuario");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<usuario>("bKeyModel.FK_usuario_cerradura_usuario", "usuario", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
